<div id="particles-js" class="snow"></div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<div class="container-fluid">
    <form action="/user/place-order" method="POST">
        <div class="row px-xl-5">
            <!-- Billing Address -->
            <div class="col-lg-8">
                <h5 class="section-title position-relative text-uppercase mb-3">
                    <span class="bg-secondary pr-3">Billing Address</span>
                </h5>
                <div class="bg-light p-30 mb-5">
                    <div class="row">
                        <div class="col-12">
                            <h4>Choose Existing Address</h4>
                            <div class="address-cards d-flex flex-wrap">
                                {{#each address}}
                                <div class="card address-card m-2" data-id="{{this._id}}"
                                    style="cursor: pointer; width: 18rem; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); transition: transform 0.3s ease;">
                                    <div class="card-body">
                                        <h5 class="card-title">Address #{{increment @index }}</h5>
                                        <p class="card-text">
                                            {{this.line1}}<br>
                                            {{this.city}}, {{this.state}}, {{this.country}}<br>
                                            ZIP: {{this.zipCode}}
                                        </p>
                                    </div>
                                </div>
                                {{/each}}
                            </div>
                        </div>

                        <h4 class="mt-4 mb-4">Or Enter Manually</h4>
                        <!-- Form fields to populate when an address is selected -->
                        <div class="col-md-6 form-group">
                            <label>Full Name</label>
                            <input class="form-control" type="text" name="name" value="{{user.name}}" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>E-mail</label>
                            <input class="form-control" type="email" name="email" value="{{user.email}}" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Mobile No</label>
                            <input class="form-control" type="text" name="phone" value="{{user.phone}}" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Address Line 1</label>
                            <input class="form-control" type="text" name="line1" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>City</label>
                            <input class="form-control" type="text" name="city" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>State</label>
                            <input class="form-control" type="text" name="state" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Country</label>
                            <input class="form-control" type="text" name="country" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>ZIP Code</label>
                            <input class="form-control" type="text" name="zipCode" required>
                        </div>
                    </div>
                </div>
            </div>


            <!-- Order Summary -->
            <div class="col-lg-4">
                <h5 class="section-title position-relative text-uppercase mb-3">
                    <span class="bg-secondary pr-3">Order Total</span>
                </h5>
                <div class="bg-light p-30 mb-5">
                    <div class="border-bottom">
                        <h6 class="mb-3">Products</h6>
                        {{#each products}}
                        <div class="d-flex justify-content-between">
                            <p>{{this.productName}} ({{this.quantity}})</p>
                            <input type="hidden" name="products[{{@index}}][productName]" value="{{this.productName}}">
                            <input type="hidden" name="products[{{@index}}][quantity]" value="{{this.quantity}}">
                            <input type="hidden" name="products[{{@index}}][price]" value="{{this.price}}">
                        </div>
                        {{/each}}
                    </div>
                    <div class="border-bottom pt-3 pb-2">
                        <div class="d-flex justify-content-between mb-3">
                            <h6>Subtotal</h6>
                            <h6>{{total}} ₹</h6>
                            <input type="hidden" name="subtotal" value="{{total}}">
                        </div>
                        <div class="d-flex justify-content-between">
                            <h6 class="font-weight-medium">Shipping</h6>
                            <h6 class="font-weight-medium">100 ₹</h6>
                            <input type="hidden" name="shipping" value="100">
                        </div>
                    </div>
                    <div class="d-flex justify-content-between mt-2">
                        <h5>Total</h5>
                        <h5 id="updatedGrandTotal">{{grandTotal}} ₹</h5>
                        <input type="hidden" name="grandTotal" value="{{grandTotal}}">
                    </div>
                </div>

                <!-- Use Wallet Amount -->
                <div class="mb-5">
                    <h5 class="section-title position-relative text-uppercase mb-3">
                        <span class="bg-secondary pr-3">Use Wallet Amount</span>
                    </h5>
                    <div class="bg-light p-30">
                        <div class="d-flex justify-content-between">
                            <h6>Wallet Balance</h6>
                            <h6 id="walletBalance">{{wallet.amountAvailable}} ₹</h6>
                        </div>
                        <div class="form-group mt-3">
                            <label for="walletUsage">Amount to Use</label>
                            <div class="input-group">
                                <input type="number" class="form-control rounded-start" id="walletUsage"
                                    name="walletUsage" min="0" max="{{wallet.amountAvailable}}" value="0"
                                    placeholder="Enter amount">
                                <button class="btn btn-primary rounded-end px-4" type="button" id="useWalletButton"
                                    style="font-weight: bold;">
                                    Use
                                </button>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mt-3">
                            <h6 class="font-weight-medium">After Wallet Discount</h6>
                            <h6 class="font-weight-medium" id="afterWalletDiscount">{{grandTotal}} ₹</h6>
                        </div>
                    </div>
                </div>




                <!-- Apply Coupon -->
                <div class="mb-5">
                    <h5 class="section-title position-relative text-uppercase mb-3">
                        <span class="bg-secondary pr-3">Apply Coupon</span>
                    </h5>
                    <div class="bg-light p-30">
                        <div class="form-group">
                            <label for="couponSelect">Select a Coupon</label>
                            <select class="form-control" id="couponSelect" name="couponId">
                                <option value="" selected disabled>Select a coupon</option>
                                {{#each coupons}}
                                <option value="{{this.couponId}}" data-discount="{{this.discountAmount}}">
                                    {{this.couponName}}
                                </option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h6 class="font-weight-medium">Discount</h6>
                            <h6 class="font-weight-medium" id="discountAmount">0 ₹</h6>
                        </div>
                    </div>
                </div>

                <!-- Payment Method -->
                <div class="mb-5">
                    <h5 class="section-title position-relative text-uppercase mb-3">
                        <span class="bg-secondary pr-3">Payment</span>
                    </h5>
                    <div class="bg-light p-30">
                        <div class="form-group">
                            <div class="custom-control custom-radio">
                                <input type="radio" class="custom-control-input" name="paymentMethod"
                                    value="Online Payment" id="paypal" required>
                                <label class="custom-control-label" for="paypal">Razorpay</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="custom-control custom-radio">
                                <input type="radio" class="custom-control-input" name="paymentMethod"
                                    value="Cash on Delivery" id="directcheck" required>
                                <label class="custom-control-label" for="directcheck">Cash on Delivery</label>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-block btn-primary font-weight-bold py-3">Place
                            Order</button>
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<!-- JavaScript -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const couponSelect = document.getElementById('couponSelect');
        const discountAmountEl = document.getElementById('discountAmount');
        const updatedGrandTotalEl = document.getElementById('updatedGrandTotal');
        const walletUsageInput = document.getElementById('walletUsage');
        const afterWalletDiscountEl = document.getElementById('afterWalletDiscount');
        const walletBalanceEl = document.getElementById('walletBalance');
        const grandTotalInput = document.querySelector('input[name="grandTotal"]');
        const form = document.querySelector('form[action="/user/place-order"]');
        const useWalletButton = document.getElementById('useWalletButton');

        let originalGrandTotal = parseFloat(grandTotalInput.value);
        let walletBalance = parseFloat(walletBalanceEl.textContent.replace('₹', '').trim());

        // Function to calculate and update totals
        const updateTotals = () => {
            const selectedOption = couponSelect.options[couponSelect.selectedIndex];
            const couponDiscount = parseFloat(selectedOption.getAttribute('data-discount')) || 0;
            const walletDiscount = parseFloat(walletUsageInput.value) || 0;

            // Ensure wallet discount does not exceed the balance
            if (walletDiscount > grandTotalInput) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Wallet Usage',
                    text: 'The wallet amount cannot exceed the cart total. You have to pay a minimum of 1 Re!',
                    confirmButtonText: 'OK',
                }).then(() => {
                    walletUsageInput.value = walletBalance; // Reset wallet usage to the balance
                });
                return;
            }


            let newGrandTotal = originalGrandTotal - couponDiscount - walletDiscount;

            // Ensure total doesn't go below 0
            newGrandTotal = Math.max(newGrandTotal, 0);

            // Update the UI
            discountAmountEl.textContent = `${couponDiscount} ₹`;
            afterWalletDiscountEl.textContent = `${newGrandTotal} ₹`;
            updatedGrandTotalEl.textContent = `${newGrandTotal} ₹`;
            grandTotalInput.value = newGrandTotal;
        };

        // Event listener for coupon selection
        couponSelect.addEventListener('change', () => {
            updateTotals();
        });

        // Event listener for wallet usage
        useWalletButton.addEventListener('click', (event) => {
            event.preventDefault(); // Prevent default button behavior
            updateTotals();
        });

        // Form submission logic
        form.addEventListener('submit', (event) => {
            const selectedCouponId = couponSelect.value;
            if (selectedCouponId) {
                const baseAction = form.getAttribute('action');
                form.setAttribute(
                    'action',
                    `${baseAction}?couponId=${encodeURIComponent(selectedCouponId)}&walletUsage=${encodeURIComponent(walletUsageInput.value)}`
                );
            }
        });
    });

    // Add event listener to all address cards
    // Event listener to handle address card selection
    // Event listener to handle address card selection
    document.querySelectorAll('.address-card').forEach(card => {
        card.addEventListener('click', function () {

            const cardText = this.querySelector('.card-text').innerText;

            // Extract city, state, country, and zip code
            const lines = cardText.split('\n'); // Split the text by newlines
            const line1 = lines[0].trim(); // First line is the line1
            const secondLine = lines[1].split(','); // Second line contains city, state, and country
            const city = secondLine[0].trim();
            const state = secondLine[1].trim();
            const country = secondLine[2].trim();
            const zipCode = lines[2].split(':')[1].trim(); // ZIP is on the last line


            // Populate the form inputs with the selected address data
            document.querySelector('input[name="line1"]').value = line1;
            document.querySelector('input[name="city"]').value = city;
            document.querySelector('input[name="state"]').value = state;
            document.querySelector('input[name="country"]').value = country;
            document.querySelector('input[name="zipCode"]').value = zipCode;
        });
    });


</script>