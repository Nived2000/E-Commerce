<!-- Cart Start -->
<div id="particles-js" class="snow"></div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-8 table-responsive mb-5">
            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>Products</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Remove</th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    {{#each products}}
                    <tr>
                        <td class="align-middle">
                            <div class="d-flex align-items-center">
                                <img src="/img/{{this.image}}" alt=""
                                    style="width: 60px; height: 70px; object-fit: cover; margin-right: 35px;">
                                <span><b>{{this.productName}} ({{this.size}})</b></span>
                            </div>
                        </td>
                        <td class="align-middle">{{this.price}} ₹</td>
                        <td class="align-middle">
                            <div class="input-group">
                                <button class="btn btn-sm btn-primary btn-decrement" data-id="{{this._id}}">-</button>
                                <span class="mx-2 quantity-text">{{this.quantity}}</span>
                                <button class="btn btn-sm btn-primary btn-increment" data-id="{{this._id}}"
                                    data-stock="{{this.availableStock}}">+</button>

                            </div>
                        </td>

                        <td class="align-middle">{{this.price}} ₹</td>
                        <td class="align-middle">
                            <a href="/user/delete-product/{{this._id}}" class="delete-link">
                                <button class="btn btn-sm btn-danger">
                                    <i class="fa fa-times"></i>
                                </button>
                            </a>


                        </td>
                    </tr>
                    {{/each}}

                </tbody>
            </table>
        </div>
        <div class="col-lg-4">

            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Cart
                    Summary</span></h5>
            <div class="bg-light p-30 mb-5">
                <div class="border-bottom pb-2">
                    <div class="d-flex justify-content-between mb-3">
                        <h6>Subtotal</h6>
                        <h6>$150</h6>
                    </div>
                    {{#if hideDelivery}}
                    {{else}}
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Shipping</h6>
                        <h6 class="font-weight-medium">10</h6>
                    </div>
                    {{/if}}
                </div>
                <div class="pt-2">
                    <div class="d-flex justify-content-between mt-2">
                        {{#if hideDelivery}}
                        <div class="d-flex justify-content-between align-items-center">
                            <h5>Total: </h5>
                            <h5 id="totalAmount"> 0₹</h5>
                        </div>

                        {{else}}
                        <h5>Total</h5>
                        <h5 id="grandTotal"></h5>
                        {{/if}}
                    </div>
                    <form id="checkoutForm" action="/user/checkout" method="POST">
                        <input type="hidden" name="updatedQuantities" id="updatedQuantities" value="">
                        <button type="submit" class="btn btn-block btn-primary font-weight-bold my-3 py-3">Proceed To
                            Checkout</button>
                    </form>

                </div>
            </div>
        </div>
    </div>
    <input type="hidden" value="{{message}}" id="message">
</div>
<!-- Cart End -->

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Function to update the cart summary dynamically
        function updateCartSummary() {
            let subtotal = 0;

            // Calculate the subtotal by iterating through each product row
            document.querySelectorAll("tbody tr").forEach(function (row) {
                const priceText = row.querySelector("td:nth-child(2)").innerText;
                const quantityText = row.querySelector(".quantity-text").innerText;

                const price = parseFloat(priceText.replace("₹", "").trim()) || 0;
                const quantity = parseInt(quantityText.trim()) || 0;
                const total = price * quantity;

                // Update the total for the row
                row.querySelector("td:nth-child(4)").innerText = `₹ ${total.toFixed(2)}`;
                subtotal += total; // Add to the subtotal
            });

            // Fixed shipping cost
            const shipping = 100;

            // Calculate the total
            const total = subtotal + shipping;

            // Update the cart summary in the DOM
            const subtotalElement = document.querySelector(".bg-light .d-flex:nth-child(1) h6:last-child");
            const shippingElement = document.querySelector(".bg-light .d-flex:nth-child(2) h6:last-child");
            const totalElement = document.getElementById("grandTotal");

            if (subtotalElement) {
                subtotalElement.innerText = `₹ ${subtotal.toFixed(2)}`;
            }
            if (shippingElement) {
                shippingElement.innerText = `₹ ${shipping.toFixed(2)}`;
            }
            if (totalElement) {
                totalElement.innerText = `₹ ${total.toFixed(2)}`;
            }
        }

        // Handle quantity increment and decrement
        document.querySelectorAll(".btn-increment").forEach(function (button) {
            button.addEventListener("click", function () {
                const quantityElement = this.parentElement.querySelector(".quantity-text");
                let currentQuantity = parseInt(quantityElement.innerText.trim()) || 0;
                const availableStock = parseInt(this.getAttribute("data-stock")) || 0;

                if (currentQuantity < availableStock) {
                    // Increment the quantity
                    quantityElement.innerText = currentQuantity + 1;
                    updateCartSummary();
                } else {
                    // Disable the increment button if stock is reached
                    Swal.fire("Maximum stock reached!");
                    this.disabled = true;
                }
            });
        });


        document.querySelectorAll(".btn-decrement").forEach(function (button) {
            button.addEventListener("click", function () {
                const quantityElement = this.parentElement.querySelector(".quantity-text");
                let currentQuantity = parseInt(quantityElement.innerText.trim()) || 0;

                if (currentQuantity > 1) {
                    // Decrement the quantity
                    quantityElement.innerText = currentQuantity - 1;

                    // Optionally make an AJAX request to update the quantity in the backend
                    // For example:
                    // const productId = this.getAttribute("data-id");
                    // $.post(`/user/update-quantity`, { id: productId, quantity: currentQuantity - 1 });

                    updateCartSummary();
                } else {
                    // Optional: Show an alert if quantity cannot go below 1
                    Swal.fire("Minimum quantity is 1!");
                }
            });
        });



        // Update the cart summary on page load
        updateCartSummary();
    });

    document.getElementById("checkoutForm").addEventListener("submit", function (event) {
        const quantities = [];

        document.querySelectorAll("tbody tr").forEach(function (row) {
            const productId = row.querySelector(".btn-increment").getAttribute("data-id");
            const quantityText = row.querySelector(".quantity-text").innerText;
            const quantity = parseInt(quantityText.trim()) || 0;

            quantities.push({ id: productId, quantity: quantity });
        });

        // Set the updated quantities as a JSON string in the hidden input field
        document.getElementById("updatedQuantities").value = JSON.stringify(quantities);
    });



    const message = document.getElementById('message').value;
    if (message) {
        Swal.fire({
            icon: 'info', // Customize icon as needed
            text: message
        });
    }
</script>